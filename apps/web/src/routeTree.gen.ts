/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const authenticatedRouteLazyImport = createFileRoute('/__authenticated')()
const publicIndexLazyImport = createFileRoute('/__public/')()
const publicTermsIndexLazyImport = createFileRoute('/__public/terms/')()
const publicSignupIndexLazyImport = createFileRoute('/__public/signup/')()
const publicSigninIndexLazyImport = createFileRoute('/__public/signin/')()
const publicResetPasswordIndexLazyImport = createFileRoute(
  '/__public/reset-password/',
)()
const publicPrivacyIndexLazyImport = createFileRoute('/__public/privacy/')()
const publicContactIndexLazyImport = createFileRoute('/__public/contact/')()
const authenticatedDashboardIndexLazyImport = createFileRoute(
  '/__authenticated/dashboard/',
)()

// Create/Update Routes

const authenticatedRouteLazyRoute = authenticatedRouteLazyImport
  .update({
    id: '/__authenticated',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/__authenticated/route.lazy').then((d) => d.Route),
  )

const publicIndexLazyRoute = publicIndexLazyImport
  .update({
    id: '/__public/',
    path: '/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/__public/index.lazy').then((d) => d.Route))

const publicTermsIndexLazyRoute = publicTermsIndexLazyImport
  .update({
    id: '/__public/terms/',
    path: '/terms/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/__public/terms/index.lazy').then((d) => d.Route))

const publicSignupIndexLazyRoute = publicSignupIndexLazyImport
  .update({
    id: '/__public/signup/',
    path: '/signup/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/__public/signup/index.lazy').then((d) => d.Route),
  )

const publicSigninIndexLazyRoute = publicSigninIndexLazyImport
  .update({
    id: '/__public/signin/',
    path: '/signin/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/__public/signin/index.lazy').then((d) => d.Route),
  )

const publicResetPasswordIndexLazyRoute = publicResetPasswordIndexLazyImport
  .update({
    id: '/__public/reset-password/',
    path: '/reset-password/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/__public/reset-password/index.lazy').then((d) => d.Route),
  )

const publicPrivacyIndexLazyRoute = publicPrivacyIndexLazyImport
  .update({
    id: '/__public/privacy/',
    path: '/privacy/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/__public/privacy/index.lazy').then((d) => d.Route),
  )

const publicContactIndexLazyRoute = publicContactIndexLazyImport
  .update({
    id: '/__public/contact/',
    path: '/contact/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/__public/contact/index.lazy').then((d) => d.Route),
  )

const authenticatedDashboardIndexLazyRoute =
  authenticatedDashboardIndexLazyImport
    .update({
      id: '/dashboard/',
      path: '/dashboard/',
      getParentRoute: () => authenticatedRouteLazyRoute,
    } as any)
    .lazy(() =>
      import('./routes/__authenticated/dashboard/index.lazy').then(
        (d) => d.Route,
      ),
    )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__authenticated': {
      id: '/__authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authenticatedRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/__public/': {
      id: '/__public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof publicIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__authenticated/dashboard/': {
      id: '/__authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof authenticatedDashboardIndexLazyImport
      parentRoute: typeof authenticatedRouteLazyImport
    }
    '/__public/contact/': {
      id: '/__public/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof publicContactIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__public/privacy/': {
      id: '/__public/privacy/'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof publicPrivacyIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__public/reset-password/': {
      id: '/__public/reset-password/'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof publicResetPasswordIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__public/signin/': {
      id: '/__public/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof publicSigninIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__public/signup/': {
      id: '/__public/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof publicSignupIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__public/terms/': {
      id: '/__public/terms/'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof publicTermsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface authenticatedRouteLazyRouteChildren {
  authenticatedDashboardIndexLazyRoute: typeof authenticatedDashboardIndexLazyRoute
}

const authenticatedRouteLazyRouteChildren: authenticatedRouteLazyRouteChildren =
  {
    authenticatedDashboardIndexLazyRoute: authenticatedDashboardIndexLazyRoute,
  }

const authenticatedRouteLazyRouteWithChildren =
  authenticatedRouteLazyRoute._addFileChildren(
    authenticatedRouteLazyRouteChildren,
  )

export interface FileRoutesByFullPath {
  '': typeof authenticatedRouteLazyRouteWithChildren
  '/': typeof publicIndexLazyRoute
  '/dashboard': typeof authenticatedDashboardIndexLazyRoute
  '/contact': typeof publicContactIndexLazyRoute
  '/privacy': typeof publicPrivacyIndexLazyRoute
  '/reset-password': typeof publicResetPasswordIndexLazyRoute
  '/signin': typeof publicSigninIndexLazyRoute
  '/signup': typeof publicSignupIndexLazyRoute
  '/terms': typeof publicTermsIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof authenticatedRouteLazyRouteWithChildren
  '/': typeof publicIndexLazyRoute
  '/dashboard': typeof authenticatedDashboardIndexLazyRoute
  '/contact': typeof publicContactIndexLazyRoute
  '/privacy': typeof publicPrivacyIndexLazyRoute
  '/reset-password': typeof publicResetPasswordIndexLazyRoute
  '/signin': typeof publicSigninIndexLazyRoute
  '/signup': typeof publicSignupIndexLazyRoute
  '/terms': typeof publicTermsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/__authenticated': typeof authenticatedRouteLazyRouteWithChildren
  '/__public/': typeof publicIndexLazyRoute
  '/__authenticated/dashboard/': typeof authenticatedDashboardIndexLazyRoute
  '/__public/contact/': typeof publicContactIndexLazyRoute
  '/__public/privacy/': typeof publicPrivacyIndexLazyRoute
  '/__public/reset-password/': typeof publicResetPasswordIndexLazyRoute
  '/__public/signin/': typeof publicSigninIndexLazyRoute
  '/__public/signup/': typeof publicSignupIndexLazyRoute
  '/__public/terms/': typeof publicTermsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/'
    | '/dashboard'
    | '/contact'
    | '/privacy'
    | '/reset-password'
    | '/signin'
    | '/signup'
    | '/terms'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/dashboard'
    | '/contact'
    | '/privacy'
    | '/reset-password'
    | '/signin'
    | '/signup'
    | '/terms'
  id:
    | '__root__'
    | '/__authenticated'
    | '/__public/'
    | '/__authenticated/dashboard/'
    | '/__public/contact/'
    | '/__public/privacy/'
    | '/__public/reset-password/'
    | '/__public/signin/'
    | '/__public/signup/'
    | '/__public/terms/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authenticatedRouteLazyRoute: typeof authenticatedRouteLazyRouteWithChildren
  publicIndexLazyRoute: typeof publicIndexLazyRoute
  publicContactIndexLazyRoute: typeof publicContactIndexLazyRoute
  publicPrivacyIndexLazyRoute: typeof publicPrivacyIndexLazyRoute
  publicResetPasswordIndexLazyRoute: typeof publicResetPasswordIndexLazyRoute
  publicSigninIndexLazyRoute: typeof publicSigninIndexLazyRoute
  publicSignupIndexLazyRoute: typeof publicSignupIndexLazyRoute
  publicTermsIndexLazyRoute: typeof publicTermsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  authenticatedRouteLazyRoute: authenticatedRouteLazyRouteWithChildren,
  publicIndexLazyRoute: publicIndexLazyRoute,
  publicContactIndexLazyRoute: publicContactIndexLazyRoute,
  publicPrivacyIndexLazyRoute: publicPrivacyIndexLazyRoute,
  publicResetPasswordIndexLazyRoute: publicResetPasswordIndexLazyRoute,
  publicSigninIndexLazyRoute: publicSigninIndexLazyRoute,
  publicSignupIndexLazyRoute: publicSignupIndexLazyRoute,
  publicTermsIndexLazyRoute: publicTermsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/__authenticated",
        "/__public/",
        "/__public/contact/",
        "/__public/privacy/",
        "/__public/reset-password/",
        "/__public/signin/",
        "/__public/signup/",
        "/__public/terms/"
      ]
    },
    "/__authenticated": {
      "filePath": "__authenticated/route.lazy.tsx",
      "children": [
        "/__authenticated/dashboard/"
      ]
    },
    "/__public/": {
      "filePath": "__public/index.lazy.tsx"
    },
    "/__authenticated/dashboard/": {
      "filePath": "__authenticated/dashboard/index.lazy.tsx",
      "parent": "/__authenticated"
    },
    "/__public/contact/": {
      "filePath": "__public/contact/index.lazy.tsx"
    },
    "/__public/privacy/": {
      "filePath": "__public/privacy/index.lazy.tsx"
    },
    "/__public/reset-password/": {
      "filePath": "__public/reset-password/index.lazy.tsx"
    },
    "/__public/signin/": {
      "filePath": "__public/signin/index.lazy.tsx"
    },
    "/__public/signup/": {
      "filePath": "__public/signup/index.lazy.tsx"
    },
    "/__public/terms/": {
      "filePath": "__public/terms/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
